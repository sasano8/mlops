[tool.poetry]
name = "mlops"
version = "0.1.0"
description = ""
authors = ["sasano8 <y-sasahara@ys-method.com>"]

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
mlflow = "^1.28.0"
scikit-learn = "^1.1.2"
pydantic = "^1.10.1"
flwr = "^1.0.0"
tensorflow = "^2.9.2"
kaggle = "^1.5.12"
mlxtend = "^0.20.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1.3"
pre-commit = "^2.20.0"
pytest-cov = "^3.0.0"
black = "^22.8.0"
flake8 = "^5.0.4"
mypy = "^0.971"
isort = "^5.10.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
extend-exclude = '''
^/mlflow/*|
^/mlruns/*
'''

[tool.isort]
profile = "black"
multi_line_output = 3
skip = ["mlflow", "mlruns", ".venv"]

[tool.mypy]
exclude = [
    '^mlops\.py$'
]

implicit_reexport = true  # __all__を強制する
warn_return_any = false
show_error_codes = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = false  # ListやDictなどのジェネリクスを強制する
check_untyped_defs = true
no_implicit_reexport = true  # モジュールにインポートされた属性の再エクスポートを抑制するか否か

# disallow_untyped_defs = true for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = false

# [pydantic-mypy]
# init_forbid_extra = true
# init_typed = true
# warn_required_dynamic_aliases = true
# warn_untyped_fields = true

# pyproject.tomlに未対応（サポートする意思はあるようが、技術的に理由でブロックされている）
# [tool.flake8]
